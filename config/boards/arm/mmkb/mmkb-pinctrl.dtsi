/*
 * copyright (c) 2024 ZMK project contributors
 *
 * SPDX-license-identifier: MIT
 */

// uncomment exactly one board revision to use
// #define REV_3 TRUE
#define REV_2 TRUE

&pinctrl {
    
    // 1-wire SPI for RGB underglow
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 20)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 20)>;
            low-power-enable;
        };
    };

    #ifdef REV_3
    // I2C for display (REV_3)
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 15)>,
                    <NRF_PSEL(TWIM_SCL, 0, 14)>;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 15)>,
                    <NRF_PSEL(TWIM_SCL, 0, 14)>;
            low-power-enable;
        };
    };

    #elif defined(REV_2)
    // I2C for display (REV_2, bridged pins workaround)
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 15)>,
                    <NRF_PSEL(TWIM_SCL, 0, 22)>;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 15)>,
                    <NRF_PSEL(TWIM_SCL, 0, 22)>;
            low-power-enable;
        };
    };
    #endif

    // I2C for fuel gauge chip
    i2c1_default: i2c1_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 13)>,
                    <NRF_PSEL(TWIM_SCL, 0, 16)>;
        };
    };

    i2c1_sleep: i2c1_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 13)>,
                    <NRF_PSEL(TWIM_SCL, 0, 16)>;
            low-power-enable;
        };
    };
};